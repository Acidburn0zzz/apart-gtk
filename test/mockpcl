#!/usr/bin/env python3
import argparse
from datetime import timedelta
from time import sleep
import sys

parser = argparse.ArgumentParser(description='Mock partclone impl')
parser.add_argument('-s', help='source')
parser.add_argument('-c', help='use stdout when not dd', action='store_true')
parser.add_argument('-r', help='restore mode when not dd', action='store_true')
parser.add_argument('-o', help='destination')
parser.add_argument('--loops', help='numbers of loops to take pretending to clone')
args = parser.parse_args()

if not args.s and not args.o:
    raise Exception('Expected at least one argument -o DEST or -s SOURCE')

loops = int(args.loops or 4)

print('Partclone v0.2.89-mock http://partclone.org', file=sys.stderr)
print('Starting to clone/restore ({}) to (-) with dd mode'.format(args.s), file=sys.stderr)
print('Calculating bitmap... Please wait... ', file=sys.stderr, end='')
sleep(0.1)
print('done!', file=sys.stderr)
print('File system:  raw', file=sys.stderr)
print('Device size:   32.2 GB = 62914560 Blocks', file=sys.stderr)
print('Space in use:  32.2 GB = 62914560 Blocks', file=sys.stderr)
print('Free Space:     0 Byte = 0 Blocks', file=sys.stderr)
print('Block size:   512 Byte', file=sys.stderr, flush=True)


def print_progress(remaining: timedelta, complete: float, rate: str):
    print(r'Elapsed: 00:00:12, Remaining: 0{remaining!s}, Completed:   {complete:.2f}%,   {rate},'.format(remaining=remaining,
                                                                                                          complete=complete,
                                                                                                          rate=rate),
          file=sys.stderr)
    print(r'current block:    3878912, total block:   62914560, Complete:   {complete:.2f}'.format(complete=complete),
          file=sys.stderr, flush=True)

for loop in range(loops):
    remaining_secs = loops - loop - 1
    loop_complete = (loop + 1) * 100 / loops
    mock_rate = '{:.2f}GB/min'.format(9 + loop / 10)

    print_progress(remaining=timedelta(seconds=remaining_secs), complete=loop_complete, rate=mock_rate)
    # print_move_term_up2()
    if not loop == loops - 1:
        sleep(1)

print('Total Time: 00:00:58, Ave. Rate:   33.3GB/min, 100.00% completed!', file=sys.stderr)
print('Syncing... ', file=sys.stderr, end='', flush=True)
if args.o:
    sleep(2)  # simulate restore syncing time
else:
    print('some-data', file=sys.stdout, end='')  # the actual partition data
print('OK!', file=sys.stderr)

if args.o:
    sys.stdin.read()
